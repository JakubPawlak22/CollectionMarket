<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CollectionMarket-API</name>
    </assembly>
    <members>
        <member name="M:CollectionMarket_API.Controllers.AttributesController.GetAttributes(CollectionMarket_UI.Filters.AttributeFilters)">
            <summary>
            Get all Attributes
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.AttributesController.GetAttribute(System.Int32)">
            <summary>
            Gets Attribute by id
            </summary>
            <param name="id">Attribute's ID</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.AttributesController.Create(CollectionMarket_API.DTOs.AttributeCreateDTO)">
            <summary>
            Creates new Attribute
            </summary>
            <param name="attribute">Attribute's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.AttributesController.Update(System.Int32,CollectionMarket_API.DTOs.AttributeUpdateDTO)">
            <summary>
            Updates Attribute
            </summary>
            <param name="id">Attribute's ID</param>
            <param name="attribute">Attribute's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.AttributesController.Delete(System.Int32)">
            <summary>
            Removes Attribute by id
            </summary>
            <param name="id">Attribute's ID</param>
            <returns></returns>
        </member>
        <member name="T:CollectionMarket_API.Controllers.CategoriesController">
            <summary>
            Interacts with Category table in database
            </summary>
        </member>
        <member name="M:CollectionMarket_API.Controllers.CategoriesController.GetCategories">
            <summary>
            Get all Categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.CategoriesController.GetCategory(System.Int32)">
            <summary>
            Gets Category by id
            </summary>
            <param name="id">Category's ID</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.CategoriesController.Create(CollectionMarket_API.DTOs.CategoryCreateDTO)">
            <summary>
            Creates new Category
            </summary>
            <param name="category">Category's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.CategoriesController.Update(System.Int32,CollectionMarket_API.DTOs.CategoryUpdateDTO)">
            <summary>
            Updates Category
            </summary>
            <param name="id">Category's ID</param>
            <param name="category">Category's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.CategoriesController.Delete(System.Int32)">
            <summary>
            Removes Category by id
            </summary>
            <param name="id">Category's ID</param>
            <returns></returns>
        </member>
        <member name="T:CollectionMarket_API.Controllers.MessagesController">
            <summary>
            Endpoint used to interact with Messages in database
            </summary>
        </member>
        <member name="M:CollectionMarket_API.Controllers.MessagesController.GetConversation(System.String)">
            <summary>
            Get all Messages between logged User and choosen User
            </summary>
            <param name="username"></param>
            <returns>All Messages between two Users</returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.MessagesController.GetConversations">
            <summary>
            Get conversations list
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.MessagesController.Create(CollectionMarket_API.DTOs.MessageCreateDTO)">
            <summary>
            Create a Message
            </summary>
            <param name="createDTO"></param>
            <returns>A Message's ID</returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.ProductTypesController.GetProductTypes(CollectionMarket_API.Filters.ProductTypeFilters)">
            <summary>
            Get all Product Types
            </summary>
            <param name="filters">Filters</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.ProductTypesController.GetProductType(System.Int32)">
            <summary>
            Gets ProductType by id
            </summary>
            <param name="id">ProductType's ID</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.ProductTypesController.Create(CollectionMarket_API.DTOs.ProductTypeCreateDTO)">
            <summary>
            Creates new ProductType
            </summary>
            <param name="product">ProductType's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.ProductTypesController.Update(System.Int32,CollectionMarket_API.DTOs.ProductTypeUpdateDTO)">
            <summary>
            Updates ProductType
            </summary>
            <param name="id">ProductType's ID</param>
            <param name="product">ProductType's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.ProductTypesController.Delete(System.Int32)">
            <summary>
            Removes ProductType by id
            </summary>
            <param name="id">ProductType's ID</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.SaleOffersController.GetSaleOffers(CollectionMarket_API.Filters.SaleOfferFilters)">
            <summary>
            Get all Sale Offers
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.SaleOffersController.GetSaleOffer(System.Int32)">
            <summary>
            Gets Sale Offer by id
            </summary>
            <param name="id">Sale Offer's ID</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.SaleOffersController.Create(CollectionMarket_API.DTOs.SaleOfferCreateDTO)">
            <summary>
            Creates new Sale Offer
            </summary>
            <param name="offer">Sale Offer's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.SaleOffersController.Update(System.Int32,CollectionMarket_API.DTOs.SaleOfferUpdateDTO)">
            <summary>
            Updates Sale Offer
            </summary>
            <param name="id">SaleOffer's ID</param>
            <param name="offer">SaleOffer's informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.SaleOffersController.Delete(System.Int32)">
            <summary>
            Removes SaleOffer by id
            </summary>
            <param name="id">SaleOffer's ID</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.Login(CollectionMarket_API.DTOs.UserLoginDTO)">
            <summary>
            Login
            </summary>
            <param name="loginDTO">Username and Password</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.Register(CollectionMarket_API.DTOs.UserRegisterDTO)">
            <summary>
            User Registration 
            </summary>
            <param name="userRegisterDTO">Account informations</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.Get(System.String)">
            <summary>
            Gets User by id
            </summary>
            <param name="name">User's name</param>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.GetProfile">
            <summary>
            Gets logged User
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.GetMoney">
            <summary>
            Gets logged User
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.UpdateProfile(CollectionMarket_API.DTOs.UserProfileDTO)">
            <summary>
            Update logged User
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.Deposit(CollectionMarket_API.DTOs.CashFlowDTO)">
            <summary>
            Deposit money
            </summary>
            <returns></returns>
        </member>
        <member name="M:CollectionMarket_API.Controllers.UsersController.Withdraw(CollectionMarket_API.DTOs.CashFlowDTO)">
            <summary>
            Withdrawal from account
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
