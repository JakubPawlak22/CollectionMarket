@page "/categories"
@inject ICategoryRepository _categoryRepo;


<h3>Categories</h3>

<AuthorizeView Roles="Administrator">
    <a href="/categories/create" class="btn btn-primary">
        <span class="oi oi-plus">Add category</span>
    </a>
</AuthorizeView>

@if (!isAnyCategory)
{
    <LoadingMessage Message="There is no Category." />
}
else if (Model == null)
{
    <LoadingMessage Message="Loading Categories informations." />
}
else
{
    <table class="table table-dark">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Model)
            {
                <tr>
                    <td>
                        @category.Name
                    </td>
                    <td>
                        <DetailsButton Href=@(string.Format("/categories/{0}",category.Id)) />
                        <AuthorizeView Roles="Administrator">
                            <EditButton Href=@(string.Format("/categories/edit/{0}",category.Id)) />
                            <DeleteButton Href=@(string.Format("/categories/delete/{0}",category.Id)) />
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IList<CategoryModel> Model;
    private bool isAnyCategory = true;
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Model = await _categoryRepo.Get(Endpoints.CategoriesEndpoint);
            isAnyCategory = (Model != null && Model.Count > 0);
            this.StateHasChanged();
        }
    }
}
