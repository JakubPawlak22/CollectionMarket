@page "/attributes/edit/{Id}"
@inject IAttributeRepository _attributeRepo;
@inject NavigationManager _naviManager;
@using Common.Enums

@if (Model == null)
{
    <LoadingMessage Message="Loading Attribute informations" />
}
else
{
    <div class="card">
        <h3 class="card-title">Edit Attribute</h3>
        @if (!isSuccess)
        {
            <ErrorMessage Message="Something went wrong." />
        }
        <div class="card-body">
            <EditForm Model="Model" OnValidSubmit="HandleEditAttribute">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText Id="name" class="form-control" @bind-Value="Model.Name" />
                    <ValidationMessage For="@(()=>Model.Name)" />
                </div>
                <div class="form-group">
                    <label for="datatype">DataType</label>
                    <select @bind="Model.DataType" class="form-control" id="datatype">
                        <option value="">-- Select DataType --</option>
                        @foreach (DataTypes type in (DataTypes[])Enum.GetValues(typeof(DataTypes)))
                        {

                            <option value="@type">@type</option>
                        }
                    </select>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Submit</button>
            </EditForm>
        </div>
    </div>
}

@code {[Parameter]
    public string Id { get; set; }

    private AttributeModel Model = new AttributeModel();
    bool isSuccess = true;
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            int id = Convert.ToInt32(Id);
            Model = await _attributeRepo.Get(Endpoints.AttributesEndpoint, id);
            this.StateHasChanged();
        }
    }

    private async Task HandleEditAttribute()
    {
        int id = Convert.ToInt32(Id);
        isSuccess = await _attributeRepo.Update(Endpoints.AttributesEndpoint, Model, id);
        if (isSuccess)
        {
            _naviManager.NavigateTo("/attributes/");
        }
    }
}
