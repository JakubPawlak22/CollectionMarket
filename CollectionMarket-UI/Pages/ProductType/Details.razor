@page "/producttypes/{Id}"
@inject IProductTypeRepository _productsRepo;


@if (Model == null)
{
    <LoadingMessage Message="Loading Product informations" />
}
else
{
    <h3>@Model.Name</h3>
    <table class="table table-dark">
        <tbody>
            <tr>
                <td>
                    Name
                </td>
                <td>
                    @Model.Name
                </td>
            </tr>
            <tr>
                <td>
                    Category
                </td>
                <td>
                    <p><a href=@($"categories/{Model.CategoryId}")>@Model.CategoryName</a></p>
                </td>
            </tr>
        </tbody>
    </table>
    <h2>Attributes</h2>
    <table class="table table-dark">
        <thead>
            <tr>
                <th>Name</th>
                <th>Value</th>
                <th>Data Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var attr in Model.Attributes)
            {
                <tr>
                    <td>@attr.AttributeName</td>
                    <td>@attr.AttributeValue</td>
                    <td>@attr.DataType</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private ProductTypeModel Model;
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            int id = Convert.ToInt32(Id);
            Model = await _productsRepo.Get(Endpoints.ProductTypesEndpoint, id);
            this.StateHasChanged();
        }
    }
}
