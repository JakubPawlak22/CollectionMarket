@page "/login"

@inject IAuthenticationRepository _authenticationRepo;
@inject NavigationManager _naviManager;
<div class="card">
    <h3 class="card-title">Login</h3>
    @if (!isSuccess)
    {
        <ErrorMessage Message="Something went wrong." />
    }
    <div class="card-body">
        <EditForm Model="Model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="username">Username</label>
                <InputText Id="username" class="form-control" @bind-Value="Model.Username" />
                <ValidationMessage For="@(()=>Model.Username)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" class="form-control" @bind-Value="Model.Password" />
                <ValidationMessage For="@(()=>Model.Password)" />
            </div>
            <button type="submit" class="btn btn-primary btn-block">Login</button>
        </EditForm>
    </div>
</div>

@code {
    LoginModel Model = new LoginModel();
    bool isSuccess = true;
    private async Task HandleLogin()
    {
        isSuccess = await _authenticationRepo.Login(Model);
        if (isSuccess)
        {
            _naviManager.NavigateTo("/");
        }
    }
}