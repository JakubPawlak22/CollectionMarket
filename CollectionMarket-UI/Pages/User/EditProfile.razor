@page "/profile/edit"

@inject IUserRepository _userRepo;
@inject NavigationManager _naviManager;

<div class="card">
    <h3 class="card-title">Edit Profile</h3>
    @if (Model == null)
    {
        <LoadingMessage Message="Loading..." />
    }
    else
    {
        @if (!isSuccess)
        {
            <ErrorMessage Message="Something went wrong." />
        }
        <div class="card-body">
            <EditForm Model="Model" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="first-name">First Name</label>
                    <InputText Id="first-name" class="form-control" @bind-Value="Model.FirstName" />
                    <ValidationMessage For="@(()=>Model.FirstName)" />
                </div>
                <div class="form-group">
                    <label for="last-name">Last Name</label>
                    <InputText Id="last-name" class="form-control" @bind-Value="Model.LastName" />
                    <ValidationMessage For="@(()=>Model.LastName)" />
                </div>
                <div class="form-group">
                    <label for="city">City</label>
                    <InputText Id="city" class="form-control" @bind-Value="Model.City" />
                    <ValidationMessage For="@(()=>Model.City)" />
                </div>
                <div class="form-group">
                    <label for="postcode">Postcode</label>
                    <InputText Id="postcode" class="form-control" @bind-Value="Model.PostCode" />
                    <ValidationMessage For="@(()=>Model.PostCode)" />
                </div>
                <div class="form-group">
                    <label for="address">Address</label>
                    <InputText Id="address" class="form-control" @bind-Value="Model.Address" />
                    <ValidationMessage For="@(()=>Model.Address)" />
                </div>
                <SubmitButton />
            </EditForm>
        </div>
    }
</div>

@code {
    UserProfileModel Model;
    bool isSuccess = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Model = await _userRepo.GetLoggedUser(Endpoints.ProfileEndpoint);
            this.StateHasChanged();
        }
    }

    private async Task HandleRegistration()
    {
        isSuccess = await _userRepo.UpdateLoggedUser(Endpoints.ProfileEndpoint, Model);
        if (isSuccess)
        {
            _naviManager.NavigateTo("/profile");
        }
    }
}
